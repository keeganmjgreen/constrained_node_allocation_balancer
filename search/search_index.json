{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#constrained-node-allocation-balancer","title":"Constrained Node Allocation Balancer","text":"<p>The Constrained Node Allocation Balancer is an algorithm designed for tree data structures in which:</p> <ul> <li>Each leaf node is to be given an allocation (some value or amount).</li> <li>Each parent node\u2019s allocation is equal to the sum of its child nodes\u2019 allocations.</li> <li>Nodes are optionally constrained by a limit on their maximum allocation.</li> </ul> <p>Subject to the nodes\u2019 limits, the algorithm assigns the largest possible allocation to the tree overall, and distributes, or balances, the allocations among the leaf nodes as evenly as possible.</p>"},{"location":"#applications","title":"Applications","text":"<p>This algorithm is useful in any application where some concept of fairness is constrained by tree or network-like limits. For example, giving internet or network users maximum possible bandwidth, subject to network constraints, without arbitrarily giving one user more bandwidth than another. Or, giving electricity consumers maximum possible power, subject to electricity grid constraints, without arbitrarily giving one consumer more power than another.</p>"},{"location":"algorithm/","title":"The Algorithm","text":"<p>The Constrained Node Allocation Balancer algorithm can be broken down into three steps:</p> <ul> <li>Determining the root allocation.</li> <li>Adjusting inactive limits.</li> <li>Balancing the descendant nodes\u2019 allocations.</li> </ul> <p>Each of these steps corresponds to an internal function called by <code>constrained_node_allocation_balancer</code>.</p>"},{"location":"algorithm/#step-1-determining-the-root-allocation","title":"Step 1: Determining the root allocation","text":"<p>Function <code>_set_root_allocation</code>.</p> <p>The algorithm\u2019s first step is determining the maximum possible allocation of the tree\u2019s root node. This is equal to the largest possible sum of allocations to the tree\u2019s leaves. The algorithm determines this by iterating over the leaves, in any order, and allocating the largest possible allocation to each leaf that satisfies that leaf\u2019s limit (if any) and the limits of its ancestors. Each node has a \u201cremaining budget\u201d; in the beginning, a node\u2019s budget is set to its limit. As an allocation is given to a leaf (and thus to its ancestors), that leaf\u2019s budget is reduced by that amount (along with the budgets of its ancestors). Thus, each leaf is assigned the minimum of the budget of the leaf and of its ancestors. After iterating over the leaves, the allocation of the root node will be equal to the largest possible sum of the leaf allocations.</p> <p>Theorem</p> <p>The root allocation will be the same regardless of the order in which the leaves are iterated over, even if the leaf allocations would in general be different. In other words, every <code>Node.children: list[Node]</code> can be reordered arbitrarily without consequence.</p>"},{"location":"algorithm/#step-2-adjusting-inactive-limits","title":"Step 2: Adjusting inactive limits","text":"<p>Function <code>_adjust_inactive_limits</code>.</p> <p>The tree may have nodes that do not have limits or whose limits can never be reached due to the limits of those nodes\u2019s children. Such nodes\u2019 limits will be referred to as inactive limits because they represent inactive constraints; their nodes do not end up limiting their own allocation or that of their children. Because the allocation of a parent affects the allocations to its children in Step 3, and depends on the parent\u2019s limit, the parent\u2019s limit must be set/adjusted to the sum of its children\u2019s limits (the children\u2019s \u201cthroughput\u201d). Doing this throughout the tree is the algorithm\u2019s second step. This must be done starting from the level of the tree\u2019s deepest leaves and ending with the tree\u2019s root node, because the adjustment of a parent based on its children depends on the adjustment of each of the children based on their respective (grand)children; the dependencies are from leaves to root rather than from root to leaves.</p>"},{"location":"algorithm/#step-3-balancing-the-descendant-nodes-allocations","title":"Step 3: Balancing the descendant nodes\u2019 allocations","text":"<p>Function <code>_balance_allocations</code>.</p> <p>The algorithm\u2019s third and main step is to traverse the tree and distribute the root allocation as evenly as possible at each level (starting with the root\u2019s children, ending with the deepest leaves) subject to the nodes\u2019 limits.</p> <p>Definition</p> <p>A node\u2019s level is its distance from the root node, with the root being the only level 0 node and the deepest leaves having the greatest level.</p> <p>The tree is traversed from root to leaves because the allocation to a child is based on its parent\u2019s allocation depends on the parent\u2019s allocation to its own (grand)parent. This direction of traversal is opposite to Step 2. The tree is traversed in level-order, iterating over the nodes at each level and balancing the allocation between them; this breadth-first traversal order is used instead of a depth-first order because the allocations to a parent\u2019s children depends not only on that parent, but also on that parent\u2019s siblings, among whom their own (grand)parent\u2019s allocation is balanced.</p>"},{"location":"examples/","title":"Examples","text":"<p>Each of the following examples shows a case that the Constrained Node Allocation Balancer algorithm must be able to handle. For simplicity and ease of understanding, they are minimal working examples. Each one corresponds to at least one unit test in the Python package, and links to a full worked example showing the algorithm\u2019s step-by-step process.</p>"},{"location":"examples/#simple-case","title":"Simple case","text":"<p>Full worked example. Unit test: <code>test_allocating_to_leaves</code></p> <p>This example consists of a simple two-level tree with one root (node 1, with a limit of 2.0 units) and two leaves (nodes 1.1 and 1.2, with limits of 2.0 units and 1.0 units, respectively):</p> Tree visualizationPython code <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;Limit: 2.000\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;Limit: 2.000\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <pre><code>from constrained_node_allocation_balancer import (\n    Node,\n    constrained_node_allocation_balancer,\n)\n\nroot = Node(\n    limit=2,\n    children=[\n        Node(limit=2),\n        Node(limit=1),\n    ],\n)\n\nconstrained_node_allocation_balancer(root)\n</code></pre> <p>The algorithm assigns the largest possible allocations that satisfy the root\u2019s limit, while balancing how much is allocated among the leaves:</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588....|&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>If the leaves had no limits, or their limits were at least the root\u2019s limit, the result would be the same as if the leaves\u2019 limits happened to be inactive.</p> <ul> <li>Full worked example. Unit test: <code>test_allocating_to_leaves_without_limits</code></li> </ul> <p>If the root had no limit, or its limit was at least the sum of the leaves\u2019 limits, node 1.1 would have been allocated 2.0 units.</p> <ul> <li>Full worked example. Unit test: <code>test_allocating_to_leaves_without_limiting_parent</code></li> </ul>"},{"location":"examples/#allocating-to-leaves-when-redistribution-is-necessary","title":"Allocating to leaves when redistribution is necessary","text":""},{"location":"examples/#two-level-tree","title":"Two-level tree","text":"<p>Full worked example. Unit test: <code>test_allocating_to_leaves_when_redistribution_is_necessary</code></p> Tree visualizationPython code <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;Limit: 15.000\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;Limit: 6.000\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;Limit: 9.000\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <pre><code>from constrained_node_allocation_balancer import (\n    Node,\n    constrained_node_allocation_balancer,\n)\n\nroot = Node(\n    limit=15,\n    children=[\n        Node(limit=6),\n        Node(limit=1),\n        Node(limit=9),\n    ],\n)\nconstrained_node_allocation_balancer(root)\n</code></pre> <p>The above tree has a root allocation of 15.0 units. At first, the algorithm give an initial allocation of (15.0\u00a0units)/(3\u00a0nodes)\u00a0=\u00a05.0 units to each of the three leaf nodes. Node 1.1\u2019s and node 1.3\u2019s initial allocations do not exceed those nodes\u2019 limits. However, node 1.2\u2019s initial allocation does exceed its limit, by 4.0 units. The algorithm will redistribute this excess among the node\u2019s siblings that have headroom (limit\u00a0\u2212\u00a0allocation), allocating 2.0 more units to each of nodes 1.1 and 1.3. As a result, node 1.1\u2019s allocation will end up exceeding its limit by 1.0 unit. This excess will be redistributed among node 1.1\u2019s remaining siblings that have headroom (in this case, only node 1.3). The algorithm has thereby assigned the largest possible allocations that satisfy the root\u2019s limit, while balancing how much is allocated among the leaves:</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;15.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;6.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;8.000 / 9.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u258d|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre>"},{"location":"examples/#three-level-tree","title":"Three-level tree","text":"<p>Full worked example. Unit test: <code>test_allocating_to_leaves_when_redistribution_is_necessary_2</code></p> Tree visualizationPython code <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;Limit: Inf\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;Limit: Inf\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;Limit: 2.000\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;Limit: 2.000\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;Limit: 2.000\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <pre><code>from constrained_node_allocation_balancer import (\n    Node,\n    constrained_node_allocation_balancer,\n)\n\nroot = Node(\n    children=[\n        Node(\n            children=[\n                Node(limit=1),\n                Node(limit=2),\n            ],\n        ),\n        Node(\n            limit=2,\n            children=[\n                Node(limit=1),\n                Node(limit=2),\n            ],\n        ),\n    ],\n)\nconstrained_node_allocation_balancer(root)\n</code></pre> <p>Result:</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588..|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre>"},{"location":"examples/#allocating-to-leaves-in-proportion-to-the-number-of-leaves-at-or-below","title":"Allocating to leaves in proportion to the number of leaves at or below","text":"<p>Full worked example. Unit test: <code>test_allocating_to_leaves_in_proportion_to_n_leaves_at_or_below</code></p> <p>This example shows how the algorithm does not allocate to nodes evenly, but in proportion to the number of leaves represented by each node. Node 1.1 represents one leaf (because it is a leaf), node 1.2 represents one leaf (because it has one child node that is a leaf), and node 1.3 represents two leaves (because it has two child nodes that are leaves). Rather than splitting the root allocation of 4.0 units evenly and giving each of these three nodes 1.333 units, the algorithm splits the root allocation in proportion to the number of leaves \u201cat or below\u201d.</p> Tree visualizationPython code <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;Limit: 4.000\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;Limit: Inf\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;Limit: 2.000\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;Limit: Inf\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;Limit: 3.000\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;Limit: 4.000\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <pre><code>from constrained_node_allocation_balancer import (\n    Node,\n    constrained_node_allocation_balancer,\n)\n\nroot = Node(\n    limit=4,\n    children=[\n        Node(limit=1),\n        Node(\n            children=[\n                Node(limit=2),\n            ]\n        ),\n        Node(\n            children=[\n                Node(limit=3),\n                Node(limit=4),\n            ]\n        ),\n    ],\n)\nconstrained_node_allocation_balancer(root)\n</code></pre> <p>Result:</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;2.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589......|&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;1.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u258d..|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;1.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u258d...|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>The same principle applies when redistribution is necessary: Full worked example. Unit test: <code>test_reallocating_to_leaves_in_proportion_to_n_leaves_at_or_below</code></p>"},{"location":"examples/#allocating-to-leaves-when-adjusting-an-inactive-limits-is-necessary","title":"Allocating to leaves when adjusting an inactive limit(s) is necessary","text":""},{"location":"examples/#three-level-tree_1","title":"Three-level tree","text":"<p>Full worked example. Unit test: <code>test_allocating_to_leaves_when_adjusting_inactive_limit_is_necessary</code></p> <p>As part of its functioning, the algorithm adjusts the limits of any nodes that do not have limits or whose limits can never be reached due to the limits of those node\u2019s children. Such nodes\u2019 limits are referred to as inactive limits. The following tree has a root allocation of 90.0 units, meaning that the initial allocation to nodes 1.1 and 1.2 would be 45.0 units each. The resulting excess that must be redistributed, however, must be (45.0\u00a0\u2212\u00a010.0)\u00a0=\u00a035.0 rather than (45.0\u00a0\u2212\u00a020.0)\u00a0=\u00a025.0 in order to take into account the limits of child node 1.1.1 and sibling node 1.2. To achieve this, node 1.1\u2019s limit is adjusted from 20.0 to 10.0. Similarly, the root node\u2019s limit is adjusted from infinity to 90.0.</p> Tree visualizationPython code <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;Limit: Inf\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;Limit: 20.000\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;Limit: 10.000\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;Limit: 80.000\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;Limit: 100.000\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <pre><code>from constrained_node_allocation_balancer import (\n    Node,\n    constrained_node_allocation_balancer,\n)\n\nroot = Node(\n    children=[\n        Node(\n            limit=20,  # Inactive limit; will be adjusted to `10`.\n            children=[Node(limit=10)],\n        ),\n        Node(\n            limit=80,  # Active limit.\n            children=[Node(limit=100)],\n        ),\n    ],\n)\nconstrained_node_allocation_balancer(root)\n</code></pre> <p>Result:</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre>"},{"location":"examples/#four-level-tree","title":"Four-level tree","text":"<p>Full worked example. Unit test: <code>test_allocating_to_leaves_when_adjusting_inactive_limits_is_necessary</code></p> Tree visualizationPython code <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;Limit: Inf\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;Limit: 9.000\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;Limit: 1.000\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;Limit: 8.000\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;Limit: 10.000\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;Limit: 80.000\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;Limit: 100.000\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <pre><code>from constrained_node_allocation_balancer import (\n    Node,\n    constrained_node_allocation_balancer,\n)\n\nroot = Node(\n    children=[\n        Node(\n            limit=20,  # Inactive limit; will be adjusted to `10`.\n            children=[\n                Node(\n                    limit=2,  # Inactive limit; will be adjusted to `1`.\n                    children=[Node(limit=1)],\n                ),\n                Node(\n                    limit=8,  # Active limit.\n                    children=[Node(limit=10)],\n                ),\n            ],\n        ),\n        Node(\n            limit=80,  # Active limit.\n            children=[Node(limit=100)],\n        ),\n    ],\n)\nconstrained_node_allocation_balancer(root)\n</code></pre> <p>Result:</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;8.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;8.000 / 10.000&lt;br&gt;&lt;code&gt;|\u258a|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre>"},{"location":"fair_internet_bandwidth_problem/","title":"Application: The \u2018Fair Internet Bandwidth\u2019 Problem","text":"<p>Consider an internet network structured as a tree, in which the root node is the only producer of of data and the leaves are the only consumers of data. The direction of data flow is exclusively from root to leaves. This is not a terrible model for a lot of internet traffic, for example media streaming services, in which the root represents streaming services\u2019 servers in one region, and the leaves represent the users of those streaming services. Users upload a negligible amount of data compared to how much they download. Each user requests data transfer at a speed up to the maximum speed of the internet service plan they pay for. In the tree-like network, the intermediate nodes (between the root and leaves) represent the internet infrastructure and data transfer speed limits imposed by it (fiber versus cable versus fixed internet).</p> <p>The \u2018fair internet bandwidth\u2019 problem asks how to distribute internet bandwidth fairly among users that are requesting data at different speeds, with different maximum speeds according to their internet service plans, in service areas that differ in terms of internet infrastructure.</p> <p>The following example shows how the \u2018fair internet bandwidth\u2019 problem can be solved using the Constrained Node Allocation Balancer package. A subclass of <code>Node</code> called <code>InternetUser</code> is created, defining the node\u2019s <code>limit</code> as the lesser of the user\u2019s maximum speed (per their internet service plan) and their requested speed. The algorithm evenly distributes bandwidth among users until a limit is reached\u2014whether that of the data transfer speed being requested by a customer, or the maximum speed for a user, or of the upstream infrastructure. At this point, the algorithm redistributes excess bandwidth as fairly as possible. The algorithm would be re-executed constantly to account for users\u2019 constantly fluctuating data needs.</p> <pre><code>import dataclasses\n\nfrom constrained_node_allocation_balancer import LeafNode\n\n\n@dataclasses.dataclass\nclass InternetUser(LeafNode):\n    requested_speed_mbps: float\n    max_speed_mbps: float = float(\"inf\")\n\n    @property\n    def limit(self) -&gt; float:\n        return min(self.max_speed_mbps, self.requested_speed_mbps)\n\n\nstreaming_service_1 := Node(\n    children=[\n        switch_1 := Node(\n            limit=4,\n            children=[\n                user_1 := InternetUser(max_speed=2, requested_speed=4),\n                user_2 := InternetUser(max_speed=3, requested_speed=3),\n            ],\n        ),\n        switch_2 := Node(\n            limit=4,\n            children=[\n                user_3 := InternetUser(max_speed=4, requested_speed=2),\n                user_4 := InternetUser(max_speed=5, requested_speed=1),\n            ],\n        ),\n    ]\n)\nconstrained_node_allocation_balancer(streaming_service_1)\nuser_1.allocation  # 2.0\nuser_2.allocation  # 2.0\nuser_3.allocation  # 2.0\nuser_4.allocation  # 1.0\n</code></pre>"},{"location":"fair_internet_bandwidth_problem/#variant-balancing-the-fraction-of-requested-speed-that-is-fulfilled","title":"Variant: balancing the fraction of requested speed that is fulfilled","text":"<p>In a variant of the fair internet bandwidth problem, the question is not of how to fairly distribute internet bandwidth, but how to fairly distribute the fraction of each user\u2019s requested data transfer speed that is fulfilled. Obviously, it is theoretically possible that all users\u2019 data transfer speeds can be fulfilled, but this trivial case is not true in general.</p> <p>This variant focuses more than the original problem on delivering internet speeds that are in proportion to how much users pay. The variant would be a fairer approach than the original formulation if users paid a fixed monthly cost per Mbps, however rural users obviously pay more per Mbps per month than urban users (and depending on their monthly Mb limit, for that matter).</p> <p>The <code>InternetUser</code> subclass of <code>Node</code> is changed to the following to solve the variant, now defining a <code>conversion_factor</code> for the node. This conversion factor is a feature of the Constrained Node Allocation Balancer algorithm which allows different units to be used for their <code>limit</code> and <code>allocation</code>, for all nodes. In this case, the <code>limit</code> is in Mbps and the <code>allocation</code> is dimensionless (a fraction between 0 and 1).</p> <pre><code>@dataclasses.dataclass\nclass InternetUser(LeafNode):\n    requested_speed_mbps: float\n    max_speed_mbps: float = float(\"inf\")\n\n    @property\n    def limit(self) -&gt; float:\n        return min(self.max_speed_mbps, self requested_speed_mbps)\n\n    @property\n    def conversion_factor(self) -&gt; float:\n        return self.limit\n</code></pre>"},{"location":"fair_power_curtailment_problem/","title":"Application: The \u2018Fair Power Curtailment\u2019 Problem","text":"<p>The electrical grid is a complex system ranging from generation and transmission to distribution and final consumption. While increases in consumer \u201cbehind-the-meter\u201d rooftop solar panels have reduced strain on the grid and started to change the status quo of who in the grid can produce energy, the vast majority of electricity still comes from centralized power plants and wind or solar farms. On the other hand, the past decade has seen remarkable adoption of EVs, the charging of which threatens to increase strain on the grid\u2014both in terms of how well existing generation can meet the increased demand, and in terms of how well existing grid infrastructure can handle that extra power.</p> <p>A better solution than solely increasing generation and infrastructure capacity is to intelligently manage EV charging at grid scale, curtailing or shifting EV charging to avoid peaks and smooth out the load. The question remains of how much to curtail, and where. This depends on where there exist limited capacities, in terms of generation, transformers, and distribution lines, in the grid.</p> <p>The Constrained Node Allocation Balancer algorithm can be used to solve this problem by modeling the grid as a tree consisting of limits. The tree\u2019s root node represents the centralized generation of power, the leaf nodes represent the final consumers of electricity, and the intermediate nodes represent transmission and distribution. The nodes\u2019 limits represent limited generation capacity, power limits imposed by transformers and distribution lines, and the finite amount of power that each grid user wants to use at any given time. Power flow is generally unidirectional, from the top down, but in general can be bidirectional in our tree model, which accounts for behind-the-meter solar and even net grid export from solar producers.</p> <pre><code>import dataclasses\n\nfrom constrained_node_allocation_balancer import LeafNode\n\n\n@dataclasses.dataclass\nclass GridUser(LeafNode):\n    nonoptional_net_load_kw: float\n    optional_net_load_kw: float\n\n    @property\n    def limit(self) -&gt; float:\n        return (\n            self.nonoptional_net_load_kw\n            + self.optional_net_load_kw\n        )\n\n    @property\n    def shift_constant(self) -&gt; float:\n        return self.nonoptional_net_load_kw\n        # assert nonnegative after subtracting\n\n\ncentralized_generation := Node(\n    limit=sum(\n        power_plant_output_kw,\n        solar_farm_output_kw,\n        wind_farm_output_kw,\n    ),\n    children=[\n        feeder_transformer_1 := Node(\n            limit=4,\n            children=[\n                user_1 := GridUser(requested_net_import_kw=2),\n                user_2 := GridUser(requested_net_import_kw=3),\n            ],\n        ),\n        feeder_transformer_2 := Node(\n            limit=4,\n            children=[\n                user_3 := GridUser(requested_net_import_kw=2),\n                user_4 := GridUser(requested_net_import_kw=1),\n            ],\n        ),\n    ]\n)\nconstrained_node_allocation_balancer(centralized_generation)\nuser_1.allocation  # 2.0\nuser_2.allocation  # 2.0\nuser_3.allocation  # 2.0\nuser_4.allocation  # 1.0\n</code></pre> <p>A notable difference between this and the fair internet bandwidth problem is that an internet user pays according to the maximum data transfer speed and maximum total data transfer available to them, while a grid user pays according to their actual \u2018data transfer speed\u2019 (power) and actual \u2018total data transfer\u2019 (energy). Beyond having implications to how the problems can be approached using the Constrained Node Allocation Balancer, this also just speaks to how much more reasonable the cost structure of the grid often is compared to internet service.</p>"},{"location":"getting_started/","title":"Getting started","text":""},{"location":"getting_started/#as-a-user","title":"As a user","text":"<p>TODO</p>"},{"location":"getting_started/#as-a-contributor","title":"As a contributor","text":"<p>Assuming you are using a Linux-based OS:</p> <ol> <li>Install Poetry: <code>curl https://install.python-poetry.org | python3</code></li> <li><code>poetry config virtualenvs.in-project false</code></li> <li>Create the project\u2019s virtual environment (based on <code>pyproject.toml</code>): <code>poetry install</code></li> </ol> <p>Assuming you are using VS Code:</p> <ol> <li>Add <code>\"python.venvPath\": \"~/.cache/pypoetry/virtualenvs/\"</code> to your user <code>settings.json</code>.</li> <li>Select <code>constrained-node-allocation-balancer-&lt;hash&gt;-&lt;python-version&gt;</code> as your Python interpreter.</li> </ol>"},{"location":"full_worked_examples/allocating_to_leaves/","title":"Allocating to leaves","text":"<p>Allocated min(ancestral_budgets) = 2.0 to leaf 1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Allocated min(ancestral_budgets) = 0.0 to leaf 1.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Distributed 2.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588....|&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_in_proportion_to_n_leaves_at_or_below/","title":"Allocating to leaves in proportion to the number of leaves at or below","text":"<p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;1.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u258d...|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Allocated min(ancestral_budgets) = 2.0 to leaf 1.2.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u258e|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.3.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588\u258d........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;1.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u258d..|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Allocated min(ancestral_budgets) = 0.0 to leaf 1.3.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588\u258d........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;1.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u258d..|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Set limit of node 1.2 to the sum of its children\u2019s limits 2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Set limit of node 1.3 to the sum of its children\u2019s limits 7</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000 / 7.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Distributed 4.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019, \u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;2.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589......|&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Distributed 1.0 from node 1.2 to children [\u20181.2.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;2.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589......|&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|.....|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Distributed 2.0 from node 1.3 to children [\u20181.3.1\u2019, \u20181.3.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588|....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u258d|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;2.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2589......|&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;1.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u258d..|.....&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;1.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u258d...|....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_when_adjusting_inactive_limit_is_necessary/","title":"Allocating to leaves when adjusting an inactive limit(s) is necessary (three-level tree)","text":"<p>Allocated min(ancestral_budgets) = 10.0 to leaf 1.1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588.........&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;10.000 / 20.000&lt;br&gt;&lt;code&gt;|\u2588.|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Allocated min(ancestral_budgets) = 80.0 to leaf 1.2.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;10.000 / 20.000&lt;br&gt;&lt;code&gt;|\u2588.|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 20.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Set limit of node 1.1 to the sum of its children\u2019s limits 10</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 90.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;45.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|\u2588\u2588\u258c.....&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;45.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u258c...|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Redistributed 35.0 from node 1.1 to siblings with headroom [\u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 10.0 from node 1.1 to children [\u20181.1.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 80.0 from node 1.2 to children [\u20181.2.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;90.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;10.000 / 10.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_when_adjusting_inactive_limits_is_necessary/","title":"Allocating to leaves when adjusting inactive limit(s) is necessary (four-level tree)","text":"<p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.1.1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u258f.........&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 20.000&lt;br&gt;&lt;code&gt;|\u258f.|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Allocated min(ancestral_budgets) = 8.0 to leaf 1.1.2.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;9.000&lt;br&gt;&lt;code&gt;|\u2589.........&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 20.000&lt;br&gt;&lt;code&gt;|\u2589.|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;8.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;8.000 / 10.000&lt;br&gt;&lt;code&gt;|\u258a|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Allocated min(ancestral_budgets) = 80.0 to leaf 1.2.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 20.000&lt;br&gt;&lt;code&gt;|\u2589.|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;8.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;8.000 / 10.000&lt;br&gt;&lt;code&gt;|\u258a|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 20.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Set limit of node 1.1.1 to the sum of its children\u2019s limits 1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 20.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Set limit of node 1.1 to the sum of its children\u2019s limits 9</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 80.000&lt;br&gt;&lt;code&gt;|........|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 89.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;59.333 / 9.000&lt;br&gt;&lt;code&gt;||\u2588\u2588\u2588\u2588\u2589....&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;29.667 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588.....|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Redistributed 50.333333333333336 from node 1.1 to siblings with headroom [\u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 9.0 from node 1.1 to children [\u20181.1.1\u2019, \u20181.1.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;4.500 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;4.500 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 100.000&lt;br&gt;&lt;code&gt;|.........|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 80.0 from node 1.2 to children [\u20181.2.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;4.500 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;4.500 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Redistributed 3.5 from node 1.1.1 to siblings with headroom [\u20181.1.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;8.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 1.0 from node 1.1.1 to children [\u20181.1.1.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;8.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 10.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre> <p>Distributed 8.0 from node 1.1.2 to children [\u20181.1.2.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;89.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589.&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;9.000 / 9.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.1.1[\"&lt;b&gt;1.1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;8.000 / 8.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.1.2.1[\"&lt;b&gt;1.1.2.1&lt;/b&gt;&lt;br&gt;8.000 / 10.000&lt;br&gt;&lt;code&gt;|\u258a|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;80.000 / 80.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|.&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;80.000 / 100.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.|&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1.1 --&gt; 1.1.1.1\n    1.1 --&gt; 1.1.2\n    1.1.2 --&gt; 1.1.2.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_when_redistribution_is_necessary/","title":"Allocating to leaves when redistribution is necessary (two-level tree)","text":"<p>Allocated min(ancestral_budgets) = 6.0 to leaf 1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;6.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588.....|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;6.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000 / 9.000&lt;br&gt;&lt;code&gt;|......|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;7.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u258b....|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;6.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000 / 9.000&lt;br&gt;&lt;code&gt;|......|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <p>Allocated min(ancestral_budgets) = 8.0 to leaf 1.3</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;15.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;6.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;8.000 / 9.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u258d|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;15.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 6.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000 / 9.000&lt;br&gt;&lt;code&gt;|......|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <p>Distributed 15.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019, \u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;15.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;5.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u258d|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;5.000 / 1.000&lt;br&gt;&lt;code&gt;||\u2588\u2588\u258d......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;5.000 / 9.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u258d..|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <p>Redistributed 4.0 from node 1.2 to siblings with headroom [\u20181.1\u2019, \u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;15.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;7.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;7.000 / 9.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u258b.|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre> <p>Redistributed 1.0 from node 1.1 to siblings with headroom [\u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;15.000 / 15.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;6.000 / 6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;||.........&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;8.000 / 9.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u258d|...&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1 --&gt; 1.3</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_when_redistribution_is_necessary_2/","title":"Allocating to leaves when redistribution is necessary (three-level tree)","text":"<p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588........&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Allocated min(ancestral_budgets) = 2.0 to leaf 1.1.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588....&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.2.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588..&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588....&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588..|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.2.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588....&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588..|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Set limit of node 1.1 to the sum of its children\u2019s limits 3</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|......|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Distributed 5.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.500 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588.|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.500 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Redistributed 0.5 from node 1.2 to siblings with headroom [\u20181.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Distributed 3.0 from node 1.1 to children [\u20181.1.1\u2019, \u20181.1.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.500 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;1.500 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588.|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Distributed 2.0 from node 1.2 to children [\u20181.2.1\u2019, \u20181.2.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.500 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;1.500 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588.|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588..|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre> <p>Redistributed 0.5 from node 1.1.1 to siblings with headroom [\u20181.1.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;5.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.1.1[\"&lt;b&gt;1.1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.1.2[\"&lt;b&gt;1.1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.2[\"&lt;b&gt;1.2.2&lt;/b&gt;&lt;br&gt;1.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588..|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1.1 --&gt; 1.1.1\n    1.1 --&gt; 1.1.2\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1.2 --&gt; 1.2.2</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_without_limiting_parent/","title":"Allocating to leaves without a limiting parent","text":"<p>Allocated min(ancestral_budgets) = 2.0 to leaf 1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u258b..|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|......&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|......|...&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Distributed 3.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.500 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588.|...&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.500 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|\u2588.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Redistributed 0.5 from node 1.2 to siblings with headroom [\u20181.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588|...&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|......&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre>"},{"location":"full_worked_examples/allocating_to_leaves_without_limits/","title":"Allocating to leaves without limits","text":"<p>Allocated min(ancestral_budgets) = 2.0 to leaf 1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Allocated min(ancestral_budgets) = 0.0 to leaf 1.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre> <p>Distributed 2.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588|&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588.....&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2</code></pre>"},{"location":"full_worked_examples/reallocating_to_leaves_in_proportion_to_n_leaves_at_or_below/","title":"Reallocating to leaves in proportion to the number of leaves at or below","text":"<p>Allocated min(ancestral_budgets) = 1.0 to leaf 1.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;1.000&lt;br&gt;&lt;code&gt;|\u2588.........&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Allocated min(ancestral_budgets) = 2.0 to leaf 1.2.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588.......&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Allocated min(ancestral_budgets) = 3.0 to leaf 1.3.1</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;6.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588....&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588.......&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Allocated min(ancestral_budgets) = 4.0 to leaf 1.3.2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588...&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Cleared allocations from all non-root nodes</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Set limit of node 1.2 to the sum of its children\u2019s limits 2</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000&lt;br&gt;&lt;code&gt;|..........&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Set limit of node 1.3 to the sum of its children\u2019s limits 7</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;0.000 / 1.000&lt;br&gt;&lt;code&gt;|.|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;0.000 / 7.000&lt;br&gt;&lt;code&gt;|.......|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Distributed 10.0 from node 1 to children [\u20181.1\u2019, \u20181.2\u2019, \u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;2.500 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|\u258c.......&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.500 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;5.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588..|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Redistributed 1.5 from node 1.1 to siblings with headroom [\u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.500 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;6.500 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u258c|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Redistributed 0.5 from node 1.2 to siblings with headroom [\u20181.3\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;0.000 / 2.000&lt;br&gt;&lt;code&gt;|..|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;7.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Distributed 2.0 from node 1.2 to children [\u20181.2.1\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;7.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;0.000 / 3.000&lt;br&gt;&lt;code&gt;|...|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;0.000 / 4.000&lt;br&gt;&lt;code&gt;|....|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Distributed 7.0 from node 1.3 to children [\u20181.3.1\u2019, \u20181.3.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;7.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;3.500 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;3.500 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u258c|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre> <p>Redistributed 0.5 from node 1.3.1 to siblings with headroom [\u20181.3.2\u2019]</p> <pre><code>flowchart TD\n    1[\"&lt;b&gt;1&lt;/b&gt;&lt;br&gt;10.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&lt;/code&gt;\"]\n    1.1[\"&lt;b&gt;1.1&lt;/b&gt;&lt;br&gt;1.000 / 1.000&lt;br&gt;&lt;code&gt;|\u2588|........&lt;/code&gt;\"]\n    1.2[\"&lt;b&gt;1.2&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.2.1[\"&lt;b&gt;1.2.1&lt;/b&gt;&lt;br&gt;2.000 / 2.000&lt;br&gt;&lt;code&gt;|\u2588\u2588|.......&lt;/code&gt;\"]\n    1.3[\"&lt;b&gt;1.3&lt;/b&gt;&lt;br&gt;7.000 / 7.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588\u2588\u2588\u2588|..&lt;/code&gt;\"]\n    1.3.1[\"&lt;b&gt;1.3.1&lt;/b&gt;&lt;br&gt;3.000 / 3.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588|......&lt;/code&gt;\"]\n    1.3.2[\"&lt;b&gt;1.3.2&lt;/b&gt;&lt;br&gt;4.000 / 4.000&lt;br&gt;&lt;code&gt;|\u2588\u2588\u2588\u2588|.....&lt;/code&gt;\"]\n    1 --&gt; 1.1\n    1 --&gt; 1.2\n    1.2 --&gt; 1.2.1\n    1 --&gt; 1.3\n    1.3 --&gt; 1.3.1\n    1.3 --&gt; 1.3.2</code></pre>"}]}